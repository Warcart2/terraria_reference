{
  "_fv": 39,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"world_entity_inrange_foreach\" inline=\"false\"><value name=\"_placeholder\"><block type=\"entity_iterator\"></block></value><value name=\"x\"><block type=\"entity_pos_x\"><value name=\"entity\"><block type=\"source_entity_from_deps\"></block></value></block></value><value name=\"y\"><block type=\"entity_pos_y\"><value name=\"entity\"><block type=\"source_entity_from_deps\"></block></value></block></value><value name=\"z\"><block type=\"entity_pos_z\"><value name=\"entity\"><block type=\"source_entity_from_deps\"></block></value></block></value><value name=\"range\"><block type=\"java_code_get\"><field name=\"CODE\">((LivingEntity) entity).getAttribute(ForgeMod.REACH_DISTANCE.get()).getValue()</field></block></value><statement name=\"foreach\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">AND</field><value name=\"A\"><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"compare_entities\"><value name=\"a\"><block type=\"entity_iterator\"></block></value><value name=\"b\"><block type=\"entity_from_deps\"></block></value></block></value><value name=\"B\"><block type=\"compare_entities\"><value name=\"a\"><block type=\"entity_iterator\"></block></value><value name=\"b\"><block type=\"source_entity_from_deps\"></block></value></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityItem</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value><value name=\"B\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityItemFrame</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityThrowable</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value><value name=\"B\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityXPOrb</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityEnderEye</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value><value name=\"B\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityFishHook</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityMinecart</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value><value name=\"B\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityBoat</field><value name=\"compareTo\"><block type=\"entity_iterator\"></block></value></block></value></block></value></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">entityiterator.attackEntityFrom(DamageSource.GENERIC, (float)&amp;#10;&amp;#10;\t\t\t\t\tAttackDamageProcedure.executeProcedure(Stream.of(new AbstractMap.SimpleEntry&lt;&gt;(\"entity\", sourceentity)).collect(HashMap::new, (_m, _e) -&gt; _m.put(_e.getKey(), _e.getValue()), Map::putAll)));</field></block></statement></block></statement></block></next></block></xml>"
  }
}